{"version":3,"sources":["headerThree.jpg","collage.jpg","headerOne.jpg","headerTwo.jpg","HeaderZero.js","HeaderOne.js","HeaderTwo.js","HeaderThree.js","HeaderFour.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","topicStyle","paddingRight","paddingLeft","nameStyle","paddingTop","paddingBottom","teamNameStyle","HeaderZero","text","require","className","Typography","variant","style","src","collage","alt","padding","HeaderOne","headerImage","HeaderTwo","HeaderThree","HeaderFour","navTitleStyle","marginRight","flexGrow","color","Navbar","props","useState","group","setGroup","AppBar","position","backgroundColor","Toolbar","ButtonGroup","Button","onClick","setter","App","currentHeader","setHeader","header","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e63abd5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headerThree.e2f053e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/collage.ce4d961d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/headerOne.7b1eb216.jpg\";","module.exports = __webpack_public_path__ + \"static/media/headerTwo.d6404000.jpg\";","import React from 'react';\nimport collage from './collage.jpg';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography';\n\nconst topicStyle = {\n  paddingRight:'4rem',\n  paddingLeft:'4rem',\n};\n\nconst nameStyle = {\n  paddingTop:'1rem',\n  paddingBottom: '0rem',\n};\n\nconst teamNameStyle = {\n  paddingTop:'5rem',\n  paddingBottom: '0rem',\n};\n\nexport default function HeaderZero() {\n    var text = require('./text.json');\n    return (\n        <header className=\"App-header\">\n            <Typography variant=\"h3\" style={teamNameStyle}>Inclusiviteam</Typography>\n            <img src={collage} className=\"App-logo\" alt=\"logo\" />\n            <Typography variant=\"body2\" style={nameStyle}>Christine Yan, AK Alilonu, Anton Generalov, Michael Rodriguez</Typography>\n            <div style={{padding: '1em'}}/>\n            <Typography variant=\"body1\" style={topicStyle}>{text.HeaderZero}</Typography>\n        </header>\n      );\n    }","import React from 'react';\nimport headerImage from './headerOne.jpg';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography';\n\nconst topicStyle = {\n  paddingRight:'4rem',\n  paddingLeft:'4rem',\n};\n\nexport default function HeaderOne() {\n    var text = require('./text.json');\n    return (\n        <header className=\"App-header\">\n            <img src={headerImage} className=\"App-logo\" alt=\"logo\" />\n            <div style={{padding: '1em'}}/>\n            <Typography variant=\"body1\" style={topicStyle}>{text.HeaderOne}</Typography>\n        </header>\n      );\n    }","import React from 'react';\nimport headerImage from './headerTwo.jpg';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography';\n\nconst topicStyle = {\n  paddingRight:'4rem',\n  paddingLeft:'4rem',\n};\n\nexport default function HeaderTwo() {\n    var text = require('./text.json');\n    return (\n        <header className=\"App-header\">\n            <img src={headerImage} className=\"App-logo\" alt=\"logo\" />\n            <div style={{padding: '1em'}}/>\n            <Typography variant=\"body1\" style={topicStyle}>{text.HeaderTwo}</Typography>\n        </header>\n      );\n    }","import React from 'react';\nimport headerImage from './headerThree.jpg';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography';\n\nconst topicStyle = {\n  paddingRight:'4rem',\n  paddingLeft:'4rem',\n};\n\nexport default function HeaderThree() {\n    var text = require('./text.json');\n    return (\n        <header className=\"App-header\">\n            <img src={headerImage} className=\"App-logo\" alt=\"logo\" />\n            <div style={{padding: '1em'}}/>\n            <Typography variant=\"body1\" style={topicStyle}>{text.HeaderThree}</Typography>\n        </header>\n      );\n    }","import React from 'react';\nimport headerImage from './headerThree.jpg';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography';\n\nconst topicStyle = {\n  paddingRight:'4rem',\n  paddingLeft:'4rem',\n};\n\nexport default function HeaderFour() {\n    var text = require('./text.json');\n    return (\n        <header className=\"App-header\">\n            <img src={headerImage} className=\"App-logo\" alt=\"logo\" />\n            <div style={{padding: '1em'}}/>\n            <Typography variant=\"body1\" style={topicStyle}>{text.HeaderThree}</Typography>\n        </header>\n      );\n    }","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport HeaderZero from './HeaderZero.js'\nimport HeaderOne from './HeaderOne.js'\nimport HeaderTwo from './HeaderTwo.js'\nimport HeaderThree from './HeaderThree.js'\nimport HeaderFour from './HeaderFour.js'\n\nconst navTitleStyle = {\n    marginRight: '22%', \n    flexGrow: '1', \n    color: '#282c34',\n};\n\n\nexport default function Navbar(props) {\nconst [group, setGroup] = useState(\"GP 0\");\n\nfunction helperZero(){\n    setGroup(\"GP 0\");\n    props.setter(<HeaderZero/>)\n}\n\nfunction helperOne(){\n    setGroup(\"GP 1\");\n    props.setter(<HeaderOne/>)\n}\n\nfunction helperTwo(){\n    setGroup(\"GP 2\");\n    props.setter(<HeaderTwo/>)\n}\n\nfunction helperThree(){\n    setGroup(\"GP 3\");\n    props.setter(<HeaderThree/>)\n}\nfunction helperFour(){\n    setGroup(\"GP 4\");\n    props.setter(<HeaderFour/>)\n}\n\n  return (\n      <AppBar position=\"fixed\" style={{backgroundColor: 'white'}}>\n        <Toolbar>\n            <ButtonGroup>\n                <Button onClick={()=> helperZero()}>GP 0</Button>\n                <Button onClick={()=> helperOne()}>GP 1</Button>\n                <Button onClick={()=> helperTwo()}>GP 2</Button>\n                <Button onClick={()=> helperThree()}>GP 3</Button>\n                <Button onClick={()=> helperFour()}>GP 4</Button>\n            </ButtonGroup>\n            <Typography variant=\"h6\" style={navTitleStyle}>{group}</Typography>\n        </Toolbar>\n      </AppBar>\n  );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './Navbar.js'\nimport HeaderZero from './HeaderZero.js'\n\nfunction App() {\n  const [currentHeader, setHeader] = useState(<HeaderZero/>);\n  return (\n    <div className=\"App\">\n      <Navbar header={currentHeader} setter={setHeader}/>\n      {currentHeader}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}